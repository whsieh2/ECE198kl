//									tab:8
//
// prog5main.cpp - source file for UIUC ECE198KL Spring 2013 Program 5
//
// "Copyright (c) 2013 by Steven S. Lumetta."
//
// Permission to use, copy, modify, and distribute this software and its
// documentation for any purpose, without fee, and without written agreement is
// hereby granted, provided that the above copyright notice and the following
// two paragraphs appear in all copies of this software.
// 
// IN NO EVENT SHALL THE AUTHOR OR THE UNIVERSITY OF ILLINOIS BE LIABLE TO 
// ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL 
// DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, 
// EVEN IF THE AUTHOR AND/OR THE UNIVERSITY OF ILLINOIS HAS BEEN ADVISED 
// OF THE POSSIBILITY OF SUCH DAMAGE.
// 
// THE AUTHOR AND THE UNIVERSITY OF ILLINOIS SPECIFICALLY DISCLAIM ANY 
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE 
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND NEITHER THE AUTHOR NOR
// THE UNIVERSITY OF ILLINOIS HAS ANY OBLIGATION TO PROVIDE MAINTENANCE, 
// SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
//
// Author:	    Steve Lumetta
// Version:	    1.00
// Creation Date:   8 February 2013
// Filename:	    prog5main.cpp
// History:
//	SL	1.00	2 February 2013
//		First written.
//

#include <stdarg.h>

#include <iostream>

#include "WALY.h"

#include "WALYmain.h"
#include "GameScreen.h"
#include "SeedScreen.h"

#include "prog5.h"

using namespace std;
using namespace WALY;

static DebugFile*  dbg        = NULL;
static Frame*      rootFrame  = NULL;
static SeedScreen* seedScreen = NULL;
static GameScreen* gameScreen = NULL;

static int32_t     code[4];

static void 
startGame (void)
{
    if (start_game (&code[0], &code[1], &code[2], &code[3])) {
	seedScreen->deactivate ();
	gameScreen->activate ();
    }
}

static void
endGame (void)
{
    gameScreen->deactivate ();
    seedScreen->activate ();
}

int 
WALY_main (void)
{
    rootFrame = Screen::createRootFrame (500, 800);

    // create the output file for debugging...
    dbg = DebugFile::createDebugFile ();
    dbg->getStream () << "----- START OF DEBUG OUTPUT -----" << endl;
    Screen::setDebugOutput (&dbg->getStream ());
 
    seedScreen = new SeedScreen (rootFrame, startGame);
    gameScreen = new GameScreen (rootFrame, endGame);

    seedScreen->activate ();

    Screen::run ();

    delete gameScreen;
    delete seedScreen;

    dbg->getStream () << "----- END OF DEBUG OUTPUT -----" << endl;
    delete dbg;

    delete rootFrame;

    return 0;
}

int32_t 
prog5_printf (const char* fmt, ...)
{
    va_list args;
    char    buf[1024];
    int32_t len;
    char    trash[2];
    int32_t move, perfect, misplaced;

    va_start (args, fmt);
    len = vsnprintf (buf, 1024, fmt, args);
    va_end (args);

    /* strip line feed from end */
    if ('\n' == buf[len - 1]) {
        buf[--len] = '\0';
    }

    if (0 == strncmp (buf, "set_seed: ", 10)) {
        seedScreen->setMsg (buf + 10);
	return len;
    }
    if (0 == strncmp (buf, "make_guess: ", 12)) {
	/* discard--sound generated by return value of 0 */
        return len;
    }
    if (3 == sscanf (buf, "With guess %d, you got %d perfect matches and %d"
    		     "misplaced matches.%1s", &move, &perfect, &misplaced,
		     trash) &&
        1 <= move && 12 >= move && 0 <= perfect && 4 >= perfect &&
	0 <= misplaced && 4 >= misplaced) {
    	gameScreen->reportGuess (move - 1, perfect, misplaced);
	return len;
    }

    Screen::debug () << "Uninterpreted output: " << buf << endl;
    return -1;
}

